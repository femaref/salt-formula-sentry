{%- set site = salt['pillar.get']('nginx:server:site:'+site_name) %}
{%- set app = salt['pillar.get']('sentry:server') %}

upstream horizon_server_{{ site_name }} {
    server localhost:{{ app.bind.port }} fail_timeout=0;
}

server {
  {%- if site.ssl is defined and site.ssl.enabled %}
  listen 443;
  {% else %}
  listen 80;
  {%- endif %}

  server_name {{ site.host.name }}{%- if site.host.aliases is defined %} {{ site.host.aliases|join(' ') }}{%- endif %};

  client_max_body_size 20M;

  {%- if site.ssl is defined %}
  {%- if site.ssl.enabled %}
  ssi on;
  ssl on;
  ssl_certificate /etc/ssl/certs/{{ site.host.name }}.crt;
  ssl_certificate_key /etc/ssl/private/{{ site.host.name }}.key;
  {%- set ssl_mode = site.ssl.get('mode', 'secure') %}
  {%- include "nginx/conf/ssl/"+ssl_mode %}
  {%- endif %}
  {%- endif %}

  access_log  /var/log/nginx/{{ site.name }}-access;
  error_log   /var/log/nginx/{{ site.name }}-error;

  keepalive_timeout 5;

  root /srv/horizon/sites/{{ site.name }};

  location /static {
    autoindex on;
    alias /srv/horizon/sites/{{ site.name }}/static;
  }

  location /media {
    autoindex on;
    alias /srv/horizon/sites/{{ site.name }}/media;
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    if (!-f $request_filename) {
      proxy_pass http://horizon_server_{{ site_name }};
      break;
    }
  }
}
